[tool.poetry]
name = "desafio-boticario-backend-python"
version = "0.1.0"
description = ""
authors = ["Elvio Martinelli <emartinelli@protonmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.79.0"
uvicorn = "^0.18.2"
SQLAlchemy = "^1.4.40"
alembic = "^1.8.1"
psycopg2-binary = "^2.9.3"
requests = "^2.28.1"
email-validator = "^1.2.1"
fastapi-pagination = "^0.9.3"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.5"
python-json-logger = "^2.0.4"
sentry-sdk = {extras=["fastapi"], version="^1.9.4"}

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = "^22.6.0"
isort = "^5.10.1"
python-dotenv = "^0.20.0"
pytest-vcr = "^1.0.2"
pytest-mock = "^3.8.2"
sqlalchemy-stubs = "^0.4"
pytest-cov = "^3.0.0"
typer = "^0.6.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::sqlalchemy.exc.SAWarning",
]

[tool.black]
# https://github.com/psf/black
line-length = 88
target_version = ['py38']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
line_length = 88
indent = '    '
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0


[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]

    source = ["app"]
    branch = true
    omit = ['']

    [tool.coverage.report]
    exclude_lines = [
        "# noqa",
        "raise NotImplementedError"
    ]
